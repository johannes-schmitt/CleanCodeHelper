name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    env:
      SOURCE_DIR: src

    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Restore NuGet packages
      run: dotnet restore ${env:SOURCE_DIR}

    - name: Build
      id: build
      run: |
        dotnet build ${env:PATH} --configuration Release --no-restore
        $nuget_package_path = Get-ChildItem -Path ${env:SOURCE_DIR} -Filter *.nupkg -Recurse | Select-Object -first 1
        $nuget_package_name = [System.IO.Path]::GetFileName($nuget_package_path)
        echo "::set-output name=nuget_package_path::$nuget_package_path"
        echo "::set-output name=nuget_package_name::$nuget_package_name"

    - name: Run unit tests
      id: unit_tests
      run: dotnet test ${env:SOURCE_DIR} --configuration Release --no-restore --verbosity normal --collect "XPlat Code Coverage"

    - name: Publish code coverage to codecov.io
      uses: codecov/codecov-action@v1
      with: 
        fail_ci_if_error: true

    - name: Publish NuGet package as artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.build.outputs.nuget_package_name }}
        path: ${{ steps.build.outputs.nuget_package_path }}
